name: DeliveryJob

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./test-app
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Chechkout 
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install, Test and Build
        run: |
          npm ci
          npm run test
          npm run build

      - name: package.json info
        id: info
        uses: jaywcjlove/github-action-package@main
        with:
          path: ./test-app/package.json
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: tovven/test-service
          tags: |
            type=raw,value=${{ steps.info.outputs.version }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./test-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      
      - name: 'Kustomize Build'
        uses: karancode/kustomize-github-action@master
        with:
          kustomize_version: '3.0.0'
          kustomize_build_dir: 'test-app/kustomize/base'
          kustomize_output_file: "./deployment.yaml"
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          
      - uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ secrets.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ secrets.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: -n test-namespace apply -f deployment.yaml
